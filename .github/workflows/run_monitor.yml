name: Generate and Deploy Drift Report

on:
  push:
    branches:
      - main # Runs every time you push to the main branch
  schedule:
    - cron: '0 8 * * *' # Runs every day at 8:00 AM UTC
  workflow_dispatch: # Allows manual triggering

jobs:
  build-and-deploy:
    # --- Solución 3: Especificar Runner ---
    runs-on: ubuntu-22.04
    # ------------------------------------
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Python
        id: setup-python # <-- Añadido ID para referenciar
        uses: actions/setup-python@v5
        with:
          python-version: '3.11' # La versión que usás

      # --- Solución 2: Limpiar Caché de Pip ---
      - name: Clear pip cache
        run: ${{ steps.setup-python.outputs.python-path }} -m pip cache purge
      # ---------------------------------------

      # --- Solución 1: Usar Path Explícito para Pip ---
      - name: Install Dependencies
        run: |
          ${{ steps.setup-python.outputs.python-path }} -m pip install --upgrade pip
          # Instalar dependencias necesarias para el script
          ${{ steps.setup-python.outputs.python-path }} -m pip install --force-reinstall --no-cache-dir pandas psycopg2-binary evidently
      # ------------------------------------------------

      - name: List Installed Packages
        run: ${{ steps.setup-python.outputs.python-path }} -m pip list

      - name: Show Evidently Location
        run: ${{ steps.setup-python.outputs.python-path }} -m pip show evidently

      - name: Show Python Path
        run: ${{ steps.setup-python.outputs.python-path }} -c "import sys; print(sys.path)"

      # --- Solución 1: Usar Path Explícito para Verificación ---
      - name: Verify Evidently Installation
        run: |
          echo "Attempting to import Evidently modules..."
          ${{ steps.setup-python.outputs.python-path }} -c "from evidently.report import Report; print('Import Report OK')"
          ${{ steps.setup-python.outputs.python-path }} -c "from evidently.metric_preset import DataDriftPreset; print('Import DataDriftPreset OK')"
          echo "Evidently import verification complete."
      # ------------------------------------------------------

      # --- Solución 1: Usar Path Explícito para Script ---
      - name: Run Drift Monitor Script
        env:
          SUPABASE_CONNECTION_STRING: ${{ secrets.SUPABASE_CONNECTION_STRING }}
        run: |
          ${{ steps.setup-python.outputs.python-path }} deployment/drift_monitor.py
      # -------------------------------------------------

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./public # Directorio donde se guarda drift_report.html